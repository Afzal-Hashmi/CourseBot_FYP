"""Initial migration

Revision ID: 0231c0c70b37
Revises: 
Create Date: 2025-05-14 17:26:25.515488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0231c0c70b37'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('enrollments', sa.Column('enrollment_date', sa.DateTime(), nullable=True))
    op.add_column('enrollments', sa.Column('student_id', sa.Integer(), nullable=True))
    op.add_column('enrollments', sa.Column('course_id', sa.Integer(), nullable=True))
    op.drop_constraint('enrollments_teacher_id_fkey', 'enrollments', type_='foreignkey')
    op.create_foreign_key(None, 'enrollments', 'courses', ['course_id'], ['course_id'])
    op.create_foreign_key(None, 'enrollments', 'users', ['student_id'], ['id'])
    op.drop_column('enrollments', 'created_at')
    op.drop_column('enrollments', 'course_description')
    op.drop_column('enrollments', 'course_name')
    op.drop_column('enrollments', 'teacher_id')
    op.drop_column('enrollments', 'updated_at')
    op.alter_column('roles', 'role',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('teacher', 'student', name='roles_enum'),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('roles', 'role',
               existing_type=sa.Enum('teacher', 'student', name='roles_enum'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.add_column('enrollments', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('enrollments', sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('enrollments', sa.Column('course_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('enrollments', sa.Column('course_description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('enrollments', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'enrollments', type_='foreignkey')
    op.drop_constraint(None, 'enrollments', type_='foreignkey')
    op.create_foreign_key('enrollments_teacher_id_fkey', 'enrollments', 'users', ['teacher_id'], ['id'])
    op.drop_column('enrollments', 'course_id')
    op.drop_column('enrollments', 'student_id')
    op.drop_column('enrollments', 'enrollment_date')
    # ### end Alembic commands ###
